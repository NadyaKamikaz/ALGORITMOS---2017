#include "stdafx.h"
#include <iostream>
#include <string>
#include "conio.h"
#include <ctime>
#include <Windows.h>
#include <limits>
#include <iomanip>
using namespace std;
	

//----------------------ESTRUCTURAS--------------------------------------//
	

struct tcliente
 {string IDc;
  string nombrec;
  string apellidoc;
  string fechac [10];
  string correoc;
  int contrasenac;
  int cont[3];      //numero de intereses
  int estadoc;
};
tcliente registro;
	
struct tcupones
 {string cupon;
  float precio;
  float descuento;
  int cantidad;
 };
tcupones cuponeria;
	
struct tpropietario
 {string IDp;
  int NITp;
  string establecimientop;
  string descripcionp;
  string direccionp;
  string correop;
  int telefonop;
  int contrasenap;
  int interes;
  int categoriap;
  int estadop;
  struct tfactura;
  };
	
tpropietario registrro;
	
struct tgerente
  {string IDg;
   int contrasenag;
   };
	

tgerente administrador;

struct tfactura
{int NITp;
 string IDp;
 string fechap;
 int precio;
};

tfactura fact;
	
//-----------------------------FUNCIONES-----------------------------------------//

void registro_cliente();
void registro_propietario();
void registro_gerente();
void inicio_propietario();
void inicio_cliente();
void inicio_gerente();
	
void mostrar_perfil_cliente();
void modificar_perfil_cliente();
void mostrar_interes_cliente(); 
void modificar_interes_cliente(string idc); 
void mostrar_lugares_cliente(int i);
void mostrar_cupones(string id);
void cantidad_cupones();
void mostrar_perfil_propietario();
void modificar_perfil_propietario(); 
void informe_pagos(); //falta hacer
void informe_deudas();//falta hacer
void oferta_cupones();
char mostrar_oferta_cupones(string id);
void mostrar_consumidores_propietario();
void listar_lugares(); //nadia
void consultar_lugares();//nadia
void borrar_lugares();//nadia
void listar_usuarios();//nadia
void consultar_usuarios();//nadia
void listar_intereses();//nadia
void consultar_intereses(); 
	
void factura();
//-----------------------------VALIDACIONES-------------------------------------//
	

bool validarnumeroentero (string X);
bool verifexisteidcliente(string Y);
bool verificarCorreo(string correo);
bool fechanacimiento(string fecha);
bool ingreso_contrasena(string a, int b);
bool verifexisteidpopietario(string x);
bool validar_numerosNIT(int y);
bool verificar_telefono(int z);
bool verificarhoy(int dd, int mm, int aa);
bool validarnombre(string X);
//void ValidarFecha();
int FechaAnho();
int FechaMes();
int FechaDia();
bool verificacionfecha (string x);
	
//-----------------------------ARCHIVOS----------------------------------------//
	
void archivo_cliente()
	{
		FILE *ptr;
		ptr = fopen("cliente.dat","wb");
		fclose(ptr);
	}
	

void archivo_propietario()
	{
		FILE *ptr;
		ptr = fopen("propietario.dat","wb");
		fclose(ptr);
	}
	

void archivo_gerente()
	{
		FILE *ptr;
		ptr = fopen("gerente.dat","wb");
		fclose(ptr);
	}
	

void archivo_cupone()
	{
		FILE *ptr;
		ptr = fopen("cupones.dat","wb");
		fclose(ptr);
	}
	

	//----------------------------MENU PRINCIPAL-----------------------------------//
	

void main()
	{int opc1, opc2, opc3;
	cout<<"\n ##############    ################   ###          ###    #########     ";
	cout<<"\n ###                     ###          ####         ###    ###      ##   ";
	cout<<"\n ###                     ###          #####        ###    ###       ##  ";
	cout<<"\n ###                     ###          ### ##       ###    ###        ## ";
	cout<<"\n ###                     ###          ###  ##      ###    ###         ##";
	cout<<"\n ##############          ###          ###   ##     ###    ###         ##";
	cout<<"\n ###                     ###          ###    ##    ###    ###         ##";
	cout<<"\n ###                     ###          ###     ##   ###    ###        ## ";
	cout<<"\n ###                     ###          ###      ##  ###    ###       ##  ";
	cout<<"\n ###                     ###          ###       ## ###    ###      ##   ";
	cout<<"\n ###               ################   ###        #####    #########     ";
	cout<<"\n\n\n";
	cout<<"\n ########      ###                   ###        ###########   ##########   ";
	cout<<"\n ###    ##     ###                  ## ##       ###           ###          ";
	cout<<"\n ###     ##    ###                 ##   ##      ###           ###          ";
	cout<<"\n ###     ##    ###                ##     ##     ###           ###          ";
	cout<<"\n ###     ##    ###               ##       ##    ###           ###          ";
	cout<<"\n ###    ##     ###              ##         ##   ###           ##########   ";
	cout<<"\n #######       ###             ###############  ###           ###          ";
	cout<<"\n ###           ###             ##           ##  ###           ###          ";
	cout<<"\n ###           ###             ##           ##  ###           ###          ";
	cout<<"\n ###           ###             ##           ##  ###           ###          ";
	cout<<"\n ###           #############   ##           ##  ###########   ##########   ";
	cout<<"\n\n\n";
	cout<<"\n\t\t\t        BIENVENIDO/A ";
	 do
	   {cout<<"[1]   Crear cuenta";
	    cout<<"[2]   Iniciar sesion";
		cout<<"[0]   Salir";
		cout<<"\n Ingrese una opcion";
		cin>>opc1;
		switch(opc1)
		{case 1:
		  {do
		    {cout<<"\n Desea crear una cuenta de cliente, propietario o gerente";
			cout<<"[1]  Cliente";
			cout<<"[2]  Propietario";
			cout<<"[3]  Gerente Fin Place";
			cout<<"[0]  Salir";
			cin>>opc2;
			switch(opc2)
			    {case 1: registro_cliente(); break;
				 case 2: registro_propietario(); break;
				 case 3: registro_gerente(); break;
				 case 0: cout<<"\n GRACIAS POR USAR LA APP FIND PLACE ;)"; break;
			    }
			}while(opc2<0 || opc2>3);
		  }break;
		case 2:
		  {do
			{cout<<"\n Desea iniciar sesion como cliente, propietario o gerente: ";
			cout<<"[1]  Cliente";
			cout<<"[2]  Propietario";
			cout<<"[3]  Gerente Find Place";
			cout<<"[0]  Salir";
			cin>>opc3;
			switch(opc3)
			   {case 1: inicio_cliente();break;
			    case 2: inicio_propietario();break;
				case 3:inicio_gerente(); break;
				case 0: cout<<"\n GRACIAS POR USAR LA APP FIND PLACE ;)";break;
			   }
			}while(opc3<=0 || opc3>3);
		  }break;
		case 3: cout<<"\n GRACIAS POR USAR LA APP FIND PLACE ;)"; break;
		default: cout<<"\n ERROR"; break;
		}
	   }while(opc1!=0);
	_getch();
	}
	

	//-------------------------------------FUNCIONES--------------------------------//
	

void registro_cliente()
{FILE *ptr;
 int INT=3;
 ptr = fopen("cliente.dat","ab");

 cout<<"\n Ingrese su fecha de nacimiento: ";
 cin>>registro.fechac[10];
    if(fechanacimiento(registro.fechac[10])==false)
	   {do
	      {do
	         {cout<< "\n Introduzca su ID: ";
	          cin>>registro.IDc;
		     }while(validarnumeroentero (registro.IDc)==true);   
	      }while(verifexisteidpopietario(registro.IDc)==true);
	    do
	     {cout<< "\n Introduzca su nombre: ";
	      getline(cin,registro.nombrec);
		 }while( validarnombre(registro.nombrec)==true);
	    do
	     {cout<<"\n Introduzca sus apellido: ";
	      getline(cin, registro.apellidoc);
	     }while(validarnombre(registro.apellidoc)==true);
	    do
	      {cout<< "\n Ingrese el Email: ";
	       getline(cin, registro.correoc);
	      }while(verificarCorreo(registro.correoc)==true);
	    do
	      {cout<<"\n Ingrese una contraseña con caracteres numericos: ";
		   cin>>registro.contrasenac;
	      }while(validar_numerosNIT(registro.contrasenac)==true);
	    for(int i=0;i<INT;i++)
	      {do
		    {cout<<"\n-----------INTERESES------------";
	         cout<<"\n [1] Naturaleza/Resorts";
	         cout<<"\n [2] Parques";
	         cout<<"\n [3] Comida";
	         cout<<"\n [4] Cine/Teatro";
	         cout<<"\n [5] Fiesta/Diversion";
	         cout<<"\n [6] Otros";
	         cout<<"\n--------------------------------";
		     cout<<"\n Elija un interes: ";
		     cin>>registro.cont[i];
			}while(registro.cont[i]<0 || registro.cont[i]>3);
	      }
	registro.estadoc = 0;
	fwrite(&registro,sizeof(registro),1,ptr);
   }
	else
		{cout<<"\n Usted debe ser mayor de 12 años para usar FIND PLACE";
	    }
fclose(ptr);
}
	

	
void registro_propietario()
{FILE *ptr;
  ptr = fopen("propietario.dat","ab");
  do
    {do
	  {cout<< "\n Introduzca su ID: ";
	   cin>>registrro.IDp;
	   }while(validarnumeroentero (registrro.IDp)==true);   
	 }while(verifexisteidpopietario(registrro.IDp)==true);
  do
   {cout<<"\n Introduzca el NIT de su establecimiento: ";
	cin>>registrro.NITp;
   }while(validar_numerosNIT (registrro.NITp)==true);

  cout<< "\n Introduzca el nombre de su establecimiento: ";
  getline(cin,registrro.establecimientop);
  cout<<"\n Introduzca la descipcion de su establecimiento: ";
  getline(cin, registrro.descripcionp);
  cout<<"Introduzca la direccion del establecimiento: ";
  getline(cin,registrro.direccionp);
  do
    {cout<<"\n Ingrese la fecha de su subscripcion: ";
	}while(verificacionfecha(registro.fechac[10])==true);
  do
	{cout<< "\n Ingrese el Email: ";
	 getline(cin, registro.correoc);
	}while(verificarCorreo(registro.correoc)==true);
  do
	{cout<<"\n Ingrese su numero de celular: ";
	 cin>>registrro.telefonop;
	}while(verificar_telefono(registrro.telefonop)==true);
  do
    {cout<<"\n-----------INTERESES------------";
	 cout<<"\n [1] Naturaleza/Resorts";
	 cout<<"\n [2] Parques";
	 cout<<"\n [3] Comida";
	 cout<<"\n [4] Cine/Teatro";
	 cout<<"\n [5] Fiesta/Diversion";
	 cout<<"\n [6] Otros";
	 cout<<"\n--------------------------------";
	 cout<<"\n Elija el interes al cual pertenece su establecimiento: ";
	 cin>>registrro.interes;
	 }while(registrro.interes<0 ||registrro.interes>6);
   do
	 {cout<<"\n Ingrese una contraseña con caracteres numericos: ";
      cin>>registrro.contrasenap;
     }while(validar_numerosNIT(registrro.contrasenap)==true);
   do
	 {cout<<"\n Ingrese la categoria a la que pertenece su establecimiento";
	  cout<<"\n [1]  Microempresa";
	  cout<<"\n [2]  Macroempresa";
	  cout<<"\n [3]  Mediana Empresa";
	  cout<<"\n [4]  Gobierno Municipal";
	  cin>>registrro.categoriap;
	 }while(registrro.categoriap<1 || registrro.categoriap>4);
  registrro.estadop = 0;
  fwrite(&registro,sizeof(registro),1,ptr);
  fclose(ptr);
}
	

void registro_gerente()
{
	FILE *ptr;
 ptr=fopen("gerente.dat","ab");
   do
	{cout<<"\n Ingrese su ID: ";
	 cin>> administrador.IDg;
	}while(validarnumeroentero(administrador.IDg)==true);
	do
	 {cout<<"\n Ingrese su contrasena: ";
	  cin>>administrador.contrasenag;
	  }while(validar_numerosNIT(administrador.contrasenag)==true);
	}
	
void inicio_cliente()
{int contrasena, opc1, opc2, opc3, opc4;
 string ID;
 cout<<"\n Ingrese su ID: ";
 cin>>ID;
 cout<<"\n Ingrese su contrasena: ";
 cin>>contrasena;
 if(ingreso_contrasena(ID, contrasena)==false)
	  {FILE *ptr;
	   ptr = fopen("cliente.dat","rb+");
	   do
	     {cout<<"\n [1]  Perfil";
		  cout<<"\n [2]  Intereses";
		  cout<<"\n [3]  Cupones";
		  cout<<"\n [0]  Salir";
		  cout<<"\n Ingrese una opcion";
		  cin>>opc1;
		 switch(opc1)
		    {case 1:
		        {do
			       {cout<<"\n [1] Mostrar perfil";
				    cout<<"\n [2] Modificar perfil";
				    cout<<"\n [0]  Salir";
					cout<<"\n Ingrese una opcion";
				    cin>>opc2;
				    switch(opc2)
				      {case 1: mostrar_perfil_cliente(); break;
					   case 2: modificar_perfil_cliente(); break;
					   case 0: cout<<"\n Salir";
					   default: cout<<"\n ERROR";
				      }
			       }while(opc2=!0);
		        }
			 break;
			 case 2:
				{do
			       {cout<<"\n [1] Mostrar Intereses";
				    cout<<"\n [2] Modificar Intereses";
				    cout<<"\n [0] Salir";
					cout<<"\n Ingrese una opcion";
				   cin>>opc3;
				   switch(opc3)
				      {case 1: mostrar_interes_cliente(); break;
					   case 2: modificar_interes_cliente(); break;
					   case 0: cout<<"\n Salir";
					   default: cout<<"\n ERROR";
				      }
			       }while(opc3!=0);
		        }break;
			 case 3:
				do
				{cout<<"\n [1] Adquirir cupones";
				 cout<<"\n [2] Mostrar cupones";
				 cout<<"\n [0] Salir";
				 cin>>opc4;
				 switch(opc4)
				 {case 1: mostrar_cupones(registro.IDc);break;
				  case 2: cantidad_cupones(); 
				  case 0:cout<<"\n Salir";
				 }
			  }while(opc4<0 || opc4>2);
			case 0: cout<<"\n Salir"; break;
			default: cout<<"\n ERROR";
		}
	   }while(opc1!=0);
	fclose(ptr);
    }
	else
	   {cout<<"\n ERROR: Los datos no coinciden";
	   }
}
	

	

void inicio_propietario()
 {int contrasena,opc1, opc2, opc3;
 string ID;
  cout<<"\n Ingrese su ID: ";
  cin>>ID;
  cout<<"\n Ingrese su contrasena: ";
  cin>>contrasena;
  if(ingreso_contrasena(ID, contrasena)==false)
	 {FILE *ptr;
	  ptr = fopen("propietario.dat","rb+");
	  do
	   {cout<<"\n [1] Perfil";
	    cout<<"\n [2] Consumidor";
	    cout<<"\n [3] Base de datos";
		cout<<"\n [0] Salir";
		cout<<"\n Ingrese una opcion: ";
		cin>>opc1;
		switch(opc1)
		  {case 1: 
		        {do
				   {cout<<"\n [1] Mostrar";
				    cout<<"\n [2] Modificar";
					cout<<"\n [0] Salir";
					cout<<"\n Ingrese una opcion: ";
					cin>>opc2;
					switch(opc2)
					  {case 1: mostrar_perfil_propietario(); break;
					   case 2: modificar_perfil_propietario(); break;
					   case 0: cout<<"\n Salir";
					  }
				   }while(opc2<0 || opc2>3);
				}break;
		  case 2:mostrar_consumidores_propietario();break;
		  case 3:
			  {do
			    {cout<<"\n [1] Pagos y deudas";
				 cout<<"\n [2] Oferta";
				cout<<"\n Salir";
				cin>>opc3;
				switch(opc3)
				  {case 1:  factura(); //hacer
				  case 2:  oferta_cupones();
				   case 0: cout<<"\ Salir";
				  }
				}while(opc3<0 || opc3>2);
			  }break;
		  case 0:cout<<"\n Salir";break;
		  default: cout<<"\ ERROR ";
		  }
	   }while(opc1!=0);
	   fclose(ptr);
	 }
	else
	 {cout<<"\n ERROR: Los datos no coinciden";
	 }
	}
	

void inicio_gerente()
  {int contrasena,opc1, opc2, opc3, opc4;
   string ID;
   cout<<"\n Ingrese su ID: ";
   cin>>ID;
   cout<<"\n Ingrese su contrasena: ";
   cin>>contrasena;
   if(ingreso_contrasena(ID, contrasena)==false)
	  {FILE *ptr;
	   ptr = fopen("gerente.dat","rb+");
	   do
	    {cout<<"\n----------------------------";
		cout<<"\n [1] Lugares";
		cout<<"\n [2] Usuarios";
		cout<<"\n [3] Intereses";
		cout<<"\n [4] Base de datos";
		cout<<"\n Salir";
		cout<<"\n Seleccione una opcion";
		cin>>opc1;
		switch(opc1)
		      {case 1:{do
		                {cout<<"\n [1] Listar";
		                 cout<<"\n [2] Consultar";
					     cout<<"\n [3] Borrar";
					     cout<<"\n [0] Salir";
					     cout<<"\n Seleccione una opcion: ";
					     cin>>opc2;
					     switch(opc2)
					         {case 1:listar_lugares();break;
							  case 2: consultar_lugares(); break;
							  case 3:borrar_lugares();break;
							  case 0: cout<<"\n Salir";break;
						     }
						}while(opc2<0 || opc2>3);
		              }break;
	

			   case 2:{do
					     {cout<<"\n [1] Listar";
						  cout<<"\n [2] Consultar";
						  cout<<"\n [0] Salir";
						  cout<<"\n Seleccione una opcion: ";
						  cin>>opc3;
						  switch(opc3)
						  {case 1: listar_usuarios();break;
						   case 2: consultar_usuarios(); break;
						   case 3: cout<<"\n Salir";break;
						  }
						}while(opc3<0 || opc3>2);
					  } break;
			   case 3:{do
				        {cout<<"\n [1] Listar";
					     cout<<"\n [2] Consultar";
					     cout<<"\n [0] Salir";
					     cout<<"\n Seleccione una opcion: ";
					     cin>>opc4;
					     switch(opc4)
					      {case 1: listar_intereses(); break;
						   case 2: consultar_intereses(); break;
						   case 0: cout<<"\n Salir";break;
					      }
					  }while(opc4<0 || opc4>4);
					  }break;
			  case 4: informe_pagos();break;
			   case 0:cout<<"\n Salir";
					  break;
			   default: cout<<"\n ERROR";
	                   break;
		      }
	    }while(opc2!=0);
	fclose(ptr);
     }
	else
	   {cout<<"\n ERROR: Los datos no coinciden";
	   }
	}
	

	// VALIDACION FECHAS//
	

	

bool fechanacimiento(string fecha)
 {bool K=true; 
  if((fecha.at(2)=='/') && (fecha.at(5)=='/'))
	{int dd=(atoi(fecha.substr(0,2).c_str()));
	 int mm=(atoi(fecha.substr(3,2).c_str()));
	 int aa=(atoi(fecha.substr(6,4).c_str()));
	 if(mm<=12 && mm>0)
		 {if(mm==1 || mm==3 || mm==5 || mm==7 || mm==8 || mm==10 || mm==12)
			 {if(dd>=1  || dd<=31)
				{if(verificarhoy( dd, mm, aa)==false)
					{K=false;
					}
			    } 
			 }
		  else
			{if(mm==4 || mm==6|| mm==9|| mm==11)
			   {if(dd>=1  || dd<=30)
				  {if(verificarhoy( dd, mm, aa)==false)
				      {K=false;
		              }
				   } 
			   }
			 else
			   {if(aa%4==0 && (aa%100!=100) || (aa%400==0 ))
				  {if(dd>=1 ||  dd<=29)
					   {if(verificarhoy( dd, mm, aa)==false)
						   {K=false;
		                   }
			           }
			       }
				 else
				    {if(dd<=1 &&dd<=28)
						{if(verificarhoy( dd, mm, aa)==false)
						    {K=false;
						    }
			            }
			        }
		        }
		     }
		 }
     }	
   return K;
}


bool verificarhoy(int dd, int mm, int aa, string fecha)
{bool z=true;  
   if(fechanacimiento(fecha)==false)
	  {int dd1=FechaDia();
	   int mm1= FechaMes();
	   int aa1=FechaAnho();
	      if (aa1-aa>12) 
			{ return false;
		    }
		  else
			 {if (aa1-aa==12)
				 {if (mm1>mm)
					 {return false;
		             }
				  else
			         {if(mm1==mm)
					     {if (dd1>=dd)
						     {return false;
		                      }
		                 }
		              }
		           }
		      }
       }
	return z;
	}
	

int FechaAnho() 
	{
		time_ttSac = time(NULL);  // instante actual
		structtm* pt1 = localtime (&tSac);
		return((pt1->tm_year+1900));
	

	}
	
int FechaMes()
	{
		time_ttSac = time(NULL);  // instante actual
		structtm* pt1 = localtime (&tSac);
		return((pt1->tm_mon+1));
	

	}
	

int FechaDia() 
	{
		time_ttSac = time(NULL);  // instante actual
		structtm* pt1 = localtime (&tSac);
		return((pt1->tm_mday));
	

	}
	

bool validarnumeroentero (string X)
	{bool k = true;
	int i=0, cont=0; 
	for(i=0;i<X.length(); i++);
	   {if(isdigit(X[i]))
		  {cont++;
	      }
	
	   }
	if(cont==X.length())
	    k = false;
  return k;
}
	

bool validarletras (string X)
	{bool k = true;
	int i=0, cont=0; 
	for(i=0;i<X.length(); i++);
	  {if(isalpha(X[i]) !=' ' || X[i] == ' ')
		  {cont++;
	      }
	
	  }
	
	if(cont==X.length())
	    k = false;
	return k;
	}
	

	/*boolverificarCorreo(string correo);
	{
		int n = strlen(cad), i ,arr = 0, punto = 0;
		for(i  =0; i < n; i++)
		{
			if(cad[i] != '@' &&cad[i] != '.' &&cad[i] != '_'&&cad[i] != '-')
				if(cad[i] != -92 &&cad[i] != -91)
					if(!((cad[i] > 96 &&cad[i] < 123) || (cad[i] > 64 &&cad[i] < 91)))
						return false;
			if(cad[i] == '@')
				arr++;
			if(cad[i] == '.')
				punto++;
		}
		if(punto  >0)
			if(arr == 1)
				return true;
		return false;
	}
	*/

/*
bool ValidarEmail(char correo[])
{
	int tam, a, i, j;
	bool k = false;
	char dominio[30];
	tam = strlen(correo);
	if (tam == 0)
	{
		return false;
	}
	for (i = 0; i < tam; i++)
	{
		if (correo[i] == '@')
		{
			if (i == 0)
			{
				return(false);
			}
			for (j = 0; j < tam - i; j++)
			{
				dominio[j] = correo[j + i + 1];
			}
			dominio[j] = '\0';
			for(i=0;i<strlen(dominio);i++)
       	  {
		    if(dominio[i]!='0' && dominio[i]!='1' && dominio[i]!='2' && dominio[i]!='3' && dominio[i]!='4' &&  dominio[i]!='5' &&  dominio[i]!='6' &&  dominio[i]!='7' && 
		     dominio[i]!='8' && dominio[i]!='9')
		   {
			 k=true;
		   }
		   else
		  {
			 return(false);
		  }
	      }
			k = true;
		}
	}
	return(k);
}
*/


void mostrar_perfil_propietario()
{FILE *ptr;
 ptr= fopen("propietario.dat","rb");
 if(ptr !=NULL)
   {cout<<"\n Bienvenido "<<registrro.establecimientop;
    cout<<"\n ID: "<<registrro.IDp;
    cout<<"\n NIT: "<<registrro.NITp;
    cout<<"\n Descripcion Esatablecimiento: "<<registrro.descripcionp;
    cout<<"\n Direccion Establecimiento: "<<registrro.direccionp;
    cout<<"\n Correo: "<<registrro.correop;
    cout<<"\n Contacto / celular: "<<registrro.telefonop;
    cout<<"\n Interes: "<<registrro.interes;
    cout<<"\n Categoria: "<<registrro.categoriap;
   }
 else
	 cout<<"\n No existe el archivo";
}

void modificar_perfil_propietario()
{char R;
 int opc;
 cout<<"\n Desea modificar su perfil (coloque s): ";
 cin>>R;
 if(R='s')
  {FILE *ptr;
   ptr=fopen("propietario.dat","r+b");
   if(ptr !=NULL)
    {if(registrro.estadop==0)
      {do
         {cout<<"\n ----------------PERFIL----------------------";
          cout<<"\n [1] Nombre establecimiento";
	      cout<<"\n [2] Descripcion";
	      cout<<"\n [3] Direccion";
	      cout<<"\n [4] Correo";
	      cout<<"\n [5] Contacto/celular";
	      cout<<"\n [6] Categoria";
	      cout<<"\n [7] Interes ";
	      cout<<"\n [8] Contrasena ";
	      cout<<"\n [9] NIT";
		  cout<<"\n [0] No desea modificar";
	      cin>>opc;
	      switch(opc)
	        {case 1:{cout<< "\n Introduzca el nombre de su establecimiento: ";
	                 getline(cin,registrro.establecimientop);
			        }break;
		     case 2:{cout<<"\n Introduzca la descipcion de su establecimiento: ";
	                 getline(cin, registrro.descripcionp);
				    }break;
		     case 3:{cout<<"Introduzca la direccion del establecimiento: ";
                     getline(cin,registrro.direccionp);
				    }break;
		     case 4:{do
	                  {cout<< "\n Ingrese el Email: ";
	                   getline(cin, registro.correoc);
	                   }while(verificarCorreo(registro.correoc)==true);
				    }break;
		     case 5:{do
	                  {cout<<"\n Ingrese su numero de celular: ";
	                   cin>>registrro.telefonop;
	                  }while(verificar_telefono(registrro.telefonop)==true);
				    }break;
		     case 6:{do
	                  {cout<<"\n Ingrese la categoria a la que pertenece su establecimiento";
	                   cout<<"\n [1]  Microempresa";
	                   cout<<"\n [2]  Macroempresa";
	                   cout<<"\n [3]  Mediana Empresa";
	                   cout<<"\n [4]  Gobierno Municipal";
	                   cin>>registrro.categoriap;
	                  }while(registrro.categoriap<1 || registrro.categoriap>4);
				    }break;
		     case 7:{do
                      {cout<<"\n-----------INTERESES------------";
	                   cout<<"\n [1] Naturaleza/Resorts";
	                   cout<<"\n [2] Parques";
	                   cout<<"\n [3] Comida";
	                   cout<<"\n [4] Cine/Teatro";
	                   cout<<"\n [5] Fiesta/Diversion";
	                   cout<<"\n [6] Otros";
	                   cout<<"\n--------------------------------";
	                   cout<<"\n Elija el interes al cual pertenece su establecimiento: ";
	                   cin>>registrro.interes;
	                   }while(registrro.interes<0 ||registrro.interes>6);
				    }break;
		     case 8:{do
	                  {cout<<"\n Ingrese una contraseña con caracteres numericos: ";
		               cin>>registrro.contrasenap;
	                   }while(validar_numerosNIT(registrro.contrasenap)==true);
				    }break;
		     case 9:{do
	                  {cout<<"\n Ingrese el NIT de su establecimiento: ";
		               cin>>registrro.NITp;
	                   }while(validar_numerosNIT(registrro.NITp)==true);		     
				    }break;
			 case 0:{cout<<"\n Salir";
					}break;
	        }
		 }while(opc!=0);
      }
    }
  }
}


void pagos_propietario()
{
}


void deudas_propietario()
{
}


bool verificar_telefono(int z)
{bool k=true;
 int d, cont=0;
 while(z>0)
    {d=z%10;
     z=z/10;
     cont++;
    }
 if(cont=8)
    {if(validar_numerosNIT(z)==false)
       {k=false;
       }
    }
 return k;
}


bool validar_numerosNIT(int y)
{bool k=true;
 int d, i=0, n, V[15], cont=0;
 n=y;
 while(y>0)
    {d=y%10;
     V[i]=d;
     y=y/10;
     i++;
    }
 n=cont;
 for(int j=0; j<n; j++)
    {if((V[j]==0 || V[j]==1) || (V[j]==2 || V[j]==3) || (V[j]==4 || V[j]==5) || (V[j]==6 || V[j]==7) || (V[j]==8 || V[j]==9))
       {cont++;
       }
    }
 if(cont=i)
   {k=false;
   }
 return k;
} 


void factura()
{cout<<"\n Ingrese la fecha de suscripcion";
 //cin>>fact;
}

void oferta_cupones()
{FILE *ptr;
  ptr = fopen("cupones.dat","ab");
  cout<<"\n Tipo de oferta: ";
  cout<<"\n Ejemplo: Helado dechocolate";
  cout<<"\n ----->";
  cin>>cuponeria.cupon;
  cout<<"\n Precio: ";
  cout<<"\n Ejemplo: 10 bs";
  cout<<"\n ----->";
  cin>>cuponeria.precio;
  cout<<"\n Descripcion del descuento";
  cout<<"\n Ejemplo: -20% de descuento";
  cout<<"\n ----->";
  cin>>cuponeria.descuento;
  fclose(ptr);
}




void mostrar_interes_cliente()
{FILE *ptr;
 ptr = fopen("cliente.dat","rb");
 if(ptr != NULL)
   {for(int i=0;i<3;i++)
	   mostrar_lugares_cliente(i);
   }
 fclose(ptr);	 
}


void mostrar_lugares_cliente(int i)
{FILE *ptr;
 ptr = fopen("propietario.dat","rb");
 if(ptr != NULL)
    {fread(&registrro, sizeof(registrro),1,ptr);
	 while(!feof(ptr))
		 {if(registrro.interes==registro.cont[i])
		    {cout<<"\n Interes: "<<registrro.interes;
		     cout<<"\n Lugar: "<<registrro.establecimientop;
		     cout<<"\n Descripcion: "<<registrro.descripcionp;
			 cout<<"\n Direccion: "<<registrro.direccionp;
			 cout<<"\n Celular: "<<registrro.telefonop;
			 cout<<"\n Correo electronico: "<<registrro.correop;
			 mostrar_cupones(registrro.IDp);
	        }
	     }
    }
fclose(ptr);
}


char mostrar_oferta_cupones(string id)
{//se necesita abrir archivo?
  char R;
  cout<<id;
  cout<<"\n Tipo de oferta: "<<cuponeria.cupon;
  cout<<"\n Precio: "<<cuponeria.precio;
  cout<<"\n Descripcion del descuento"<<cuponeria.descuento;
  cout<<"\n Desea adquirir el cupon (coloque S)";
  cin>>R;  
  return R;
}


void mostrar_cupones(string id)
{int cont=0;
 FILE *ptr;
 ptr = fopen("cupones.dat","rb");
 if(ptr != NULL)
    {fread(&cuponeria, sizeof(cuponeria),1,ptr);
  	 while(!feof(ptr))
	    {if(id==registrro.IDp)
	       {if(mostrar_oferta_cupones(id)=='S')
		      cont++;
	       }
	    }
    }
 fclose (ptr);
}



void modificar_interes_cliente(string idc)
{FILE *ptr;
 ptr = fopen("cliente.dat","rb");
 if(ptr!= NULL)
   {fread(&registro, sizeof(registro),1,ptr);
    while(!feof(ptr))
	   {if(idc==registro.IDc)
	      {for(int i=0;i<3;i++)
		     {do
		        {cout<<"\n-----------INTERESES------------";
	             cout<<"\n [1] Naturaleza/Resorts";
	             cout<<"\n [2] Parques";
				 cout<<"\n [3] Comida";
				 cout<<"\n [4] Cine/Teatro";
				 cout<<"\n [5] Fiesta/Diversion";
				 cout<<"\n [6] Otros";
				 cout<<"\n--------------------------------";
				 cout<<"\n Elija un interes: ";
				 cin>>registro.cont[i];
			    }while(registro.cont[i]<0 || registro.cont[i]>3);
	         }      
	      }
	   }
   }
fclose (ptr);
}



bool ingreso_contrasena(string a, int b)
{ bool k=true;
   if(a==registro.IDc && b==registro.contrasenac)
    {
		k=false;
    }
 return k;
}
